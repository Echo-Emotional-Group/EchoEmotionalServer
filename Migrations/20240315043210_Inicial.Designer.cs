// <auto-generated />
using System;
using Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EchoEmotionalServer.Migrations
{
    [DbContext(typeof(DbEchoEmotional))]
    [Migration("20240315043210_Inicial")]
    partial class Inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Models.Emotion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Emotion_Desc")
                        .HasColumnType("text");

                    b.Property<Guid>("Id_Post")
                        .HasColumnType("uuid");

                    b.Property<Guid>("Perfil_UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("Perfil_UserId");

                    b.ToTable("Emotion");
                });

            modelBuilder.Entity("Models.Perfil_User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Data_Nasc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("Data_Post")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("Data_Registro")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Full_Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("Perfil_users");
                });

            modelBuilder.Entity("Models.Emotion", b =>
                {
                    b.HasOne("Models.Perfil_User", "Perfil_User")
                        .WithMany("Emotions")
                        .HasForeignKey("Perfil_UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Perfil_User");
                });

            modelBuilder.Entity("Models.Perfil_User", b =>
                {
                    b.Navigation("Emotions");
                });
#pragma warning restore 612, 618
        }
    }
}
